#include"lidar_cam_calib/cube_edge.h"


int main()
{
    std::string path = "./LidarCameraCalib_3DTo3D.prototxt";
    std::cout<<path<<std::endl;

    std::vector<pcl::PointCloud<pcl::PointXYZ>::Ptr> lines;

    std::cout<<"log"<<std::endl;
    calib::CubeEdgeProcess Cube_Edge(path); // path, show pcd viewer
    Cube_Edge.find_cube_edge(&lines); // lines, 10line, 40p
    std::cout<<"log 1"<<std::endl;

    std::cout<<"**************************"<<std::endl;
    std::cout<<lines.size()<<std::endl;

    // pcl::PointCloud<pcl::PointXYZ>::Ptr cloud(new pcl::PointCloud<pcl::PointXYZ>);
    // pcl::io::loadPCDFile<pcl::PointXYZ> ("crop.pcd", *cloud);
    //
    // for(auto line:lines)
    // {
    //     for(auto p:line->points)
    //     cloud->points.push_back(p);
    // }
    //
    // // cloud->width = 1;
    // // cloud->height = cloud->points.size();
    // // pcl::io::savePCDFileASCII("pandar_test_all.pcd", *cloud);
    //
    //
    //
    //
    // boost::shared_ptr<pcl::visualization::PCLVisualizer> viewer;
    // viewer = calib::simpleVis(cloud);
    // while (!viewer->wasStopped())
    // {
    //     viewer->spinOnce (100);
    //     boost::this_thread::sleep (boost::posix_time::microseconds (100000));
    // }
    return 0;
}
